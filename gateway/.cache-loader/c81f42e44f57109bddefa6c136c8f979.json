{"remainingRequest":"/home/jhipster/app/gateway/node_modules/thread-loader/dist/cjs.js??ref--10-2!/home/jhipster/app/gateway/node_modules/ts-loader/index.js??ref--10-3!/home/jhipster/app/gateway/node_modules/angular-router-loader/src/index.js!/home/jhipster/app/gateway/node_modules/tslint-loader/index.js!/home/jhipster/app/gateway/src/main/webapp/app/admin/user-management/user-management.route.ts","dependencies":[{"path":"/home/jhipster/app/gateway/src/main/webapp/app/admin/user-management/user-management.route.ts","mtime":1527591236903},{"path":"/home/jhipster/app/gateway/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/jhipster/app/gateway/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/home/jhipster/app/gateway/node_modules/thread-loader/dist/cjs.js","mtime":0},{"path":"/home/jhipster/app/gateway/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/home/jhipster/app/gateway/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/jhipster/app/gateway/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar ng_jhipster_1 = require(\"ng-jhipster\");\nvar core_2 = require(\"app/core\");\nvar user_management_component_1 = require(\"./user-management.component\");\nvar user_management_detail_component_1 = require(\"./user-management-detail.component\");\nvar user_management_update_component_1 = require(\"./user-management-update.component\");\nvar user_management_delete_dialog_component_1 = require(\"./user-management-delete-dialog.component\");\nvar UserResolve = /** @class */ (function () {\n    function UserResolve(principal) {\n        this.principal = principal;\n    }\n    UserResolve.prototype.canActivate = function () {\n        var _this = this;\n        return this.principal.identity().then(function (account) { return _this.principal.hasAnyAuthority(['ROLE_ADMIN']); });\n    };\n    UserResolve = tslib_1.__decorate([\n        core_1.Injectable(),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof core_2.Principal !== \"undefined\" && core_2.Principal) === \"function\" && _a || Object])\n    ], UserResolve);\n    return UserResolve;\n    var _a;\n}());\nexports.UserResolve = UserResolve;\nvar UserResolvePagingParams = /** @class */ (function () {\n    function UserResolvePagingParams(paginationUtil) {\n        this.paginationUtil = paginationUtil;\n    }\n    UserResolvePagingParams.prototype.resolve = function (route, state) {\n        var page = route.queryParams['page'] ? route.queryParams['page'] : '1';\n        var sort = route.queryParams['sort'] ? route.queryParams['sort'] : 'id,asc';\n        return {\n            page: this.paginationUtil.parsePage(page),\n            predicate: this.paginationUtil.parsePredicate(sort),\n            ascending: this.paginationUtil.parseAscending(sort)\n        };\n    };\n    UserResolvePagingParams = tslib_1.__decorate([\n        core_1.Injectable(),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_b = typeof ng_jhipster_1.JhiPaginationUtil !== \"undefined\" && ng_jhipster_1.JhiPaginationUtil) === \"function\" && _b || Object])\n    ], UserResolvePagingParams);\n    return UserResolvePagingParams;\n    var _b;\n}());\nexports.UserResolvePagingParams = UserResolvePagingParams;\nvar UserMgmtResolve = /** @class */ (function () {\n    function UserMgmtResolve(service) {\n        this.service = service;\n    }\n    UserMgmtResolve.prototype.resolve = function (route, state) {\n        var id = route.params['login'] ? route.params['login'] : null;\n        if (id) {\n            return this.service.find(id);\n        }\n        return new core_2.User();\n    };\n    UserMgmtResolve = tslib_1.__decorate([\n        core_1.Injectable(),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_c = typeof core_2.UserService !== \"undefined\" && core_2.UserService) === \"function\" && _c || Object])\n    ], UserMgmtResolve);\n    return UserMgmtResolve;\n    var _c;\n}());\nexports.UserMgmtResolve = UserMgmtResolve;\nexports.userMgmtRoute = [\n    {\n        path: 'user-management',\n        component: user_management_component_1.UserMgmtComponent,\n        resolve: {\n            pagingParams: UserResolvePagingParams\n        },\n        data: {\n            pageTitle: 'Users'\n        }\n    },\n    {\n        path: 'user-management/:login/view',\n        component: user_management_detail_component_1.UserMgmtDetailComponent,\n        resolve: {\n            user: UserMgmtResolve\n        },\n        data: {\n            pageTitle: 'Users'\n        }\n    },\n    {\n        path: 'user-management/new',\n        component: user_management_update_component_1.UserMgmtUpdateComponent,\n        resolve: {\n            user: UserMgmtResolve\n        }\n    },\n    {\n        path: 'user-management/:login/edit',\n        component: user_management_update_component_1.UserMgmtUpdateComponent,\n        resolve: {\n            user: UserMgmtResolve\n        }\n    }\n];\nexports.userDialogRoute = [\n    {\n        path: 'user-management/:login/delete',\n        component: user_management_delete_dialog_component_1.UserDeleteDialogComponent,\n        resolve: {\n            user: UserMgmtResolve\n        },\n        outlet: 'popup'\n    }\n];\n",{"version":3,"file":"/home/jhipster/app/gateway/src/main/webapp/app/admin/user-management/user-management.route.ts","sourceRoot":"","sources":["/home/jhipster/app/gateway/node_modules/angular-router-loader/src/index.js!/home/jhipster/app/gateway/node_modules/tslint-loader/index.js!/home/jhipster/app/gateway/src/main/webapp/app/admin/user-management/user-management.route.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Routes, CanActivate } from '@angular/router';\nimport { JhiPaginationUtil } from 'ng-jhipster';\n\nimport { Principal, User, UserService } from 'app/core';\nimport { UserMgmtComponent } from './user-management.component';\nimport { UserMgmtDetailComponent } from './user-management-detail.component';\nimport { UserMgmtUpdateComponent } from './user-management-update.component';\nimport { UserDeleteDialogComponent } from './user-management-delete-dialog.component';\n\n@Injectable()\nexport class UserResolve implements CanActivate {\n    constructor(private principal: Principal) {}\n\n    canActivate() {\n        return this.principal.identity().then(account => this.principal.hasAnyAuthority(['ROLE_ADMIN']));\n    }\n}\n\n@Injectable()\nexport class UserResolvePagingParams implements Resolve<any> {\n    constructor(private paginationUtil: JhiPaginationUtil) {}\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const page = route.queryParams['page'] ? route.queryParams['page'] : '1';\n        const sort = route.queryParams['sort'] ? route.queryParams['sort'] : 'id,asc';\n        return {\n            page: this.paginationUtil.parsePage(page),\n            predicate: this.paginationUtil.parsePredicate(sort),\n            ascending: this.paginationUtil.parseAscending(sort)\n        };\n    }\n}\n\n@Injectable()\nexport class UserMgmtResolve implements Resolve<any> {\n    constructor(private service: UserService) {}\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const id = route.params['login'] ? route.params['login'] : null;\n        if (id) {\n            return this.service.find(id);\n        }\n        return new User();\n    }\n}\n\nexport const userMgmtRoute: Routes = [\n    {\n        path: 'user-management',\n        component: UserMgmtComponent,\n        resolve: {\n            pagingParams: UserResolvePagingParams\n        },\n        data: {\n            pageTitle: 'Users'\n        }\n    },\n    {\n        path: 'user-management/:login/view',\n        component: UserMgmtDetailComponent,\n        resolve: {\n            user: UserMgmtResolve\n        },\n        data: {\n            pageTitle: 'Users'\n        }\n    },\n    {\n        path: 'user-management/new',\n        component: UserMgmtUpdateComponent,\n        resolve: {\n            user: UserMgmtResolve\n        }\n    },\n    {\n        path: 'user-management/:login/edit',\n        component: UserMgmtUpdateComponent,\n        resolve: {\n            user: UserMgmtResolve\n        }\n    }\n];\n\nexport const userDialogRoute: Routes = [\n    {\n        path: 'user-management/:login/delete',\n        component: UserDeleteDialogComponent,\n        resolve: {\n            user: UserMgmtResolve\n        },\n        outlet: 'popup'\n    }\n];\n"]}]}